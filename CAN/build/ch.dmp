
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08000261

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x00001a78 memsz 0x00001a78 flags rwx
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000f68 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000001ac  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000018c8  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  08001a78  08001a78  00011a78  2**0
                  CONTENTS
  3 .stacks       00000800  20000000  20000000  00020000  2**0
                  ALLOC
  4 .data         00000000  20000800  20000800  00011a78  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000768  20000800  20000800  00020000  2**3
                  ALLOC
  6 .debug_info   0000adce  00000000  00000000  00011a78  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002ccc  00000000  00000000  0001c846  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    00002838  00000000  00000000  0001f512  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000658  00000000  00000000  00021d4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000c10  00000000  00000000  000223a2  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000030b4  00000000  00000000  00022fb2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000018b7  00000000  00000000  00026066  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000033  00000000  00000000  0002791d  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000033  00000000  00000000  00027950  2**0
                  CONTENTS, READONLY
 15 .debug_frame  00001074  00000000  00000000  00027984  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080001b0 l    d  .text	00000000 .text
08001a78 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 main.c
08001800 l     F .text	00000084 can_tx
08001890 l     F .text	00000070 can_rx
200009f8 l     O .bss	000001d0 can_rx2_wa
08001a30 l     O .text	00000008 cancfg
20000bc8 l     O .bss	000001d0 can_tx_wa
08001a40 l     O .text	00000008 can1
08001a70 l     O .text	00000008 can2
20000d98 l     O .bss	000001d0 can_rx1_wa
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
08000374 l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000800 l     O .bss	00000048 mainthread.4812
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000680 l     F .text	00000070 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chmemcore.c
20000954 l     O .bss	00000004 endmem
20000958 l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000960 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 tm.c
08000da0 l     F .text	0000000c tm_start
08000db0 l     F .text	00000038 tm_stop
20000980 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 hal_lld.c
00000000 l    df *ABS*	00000000 can_lld.c
08000fa0 l     F .text	00000118 can_lld_set_filters
080010c0 l     F .text	00000040 can_lld_tx_handler
08001100 l     F .text	00000062 can_lld_rx0_handler
08001170 l     F .text	00000062 can_lld_rx1_handler
080011e0 l     F .text	0000006a can_lld_sce_handler
00000000 l    df *ABS*	00000000 pal_lld.c
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 
08001a78 l       .stacks	00000000 _etext
0001c000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
2001c000 l       *ABS*	00000000 __ram_end__
20000f68 l       .bss	00000000 _end
00000400 l       *ABS*	00000000 __main_stack_size__
00000400 l       *ABS*	00000000 __process_stack_size__
08001930 g     O .text	000000fc pal_default_config
08000360  w    F .text	00000002 Vector58
08000360  w    F .text	00000002 VectorE8
08000360  w    F .text	00000002 Vector9C
08000490 g     F .text	00000048 nvicEnableVector
08000360  w    F .text	00000002 VectorAC
08000a00 g     F .text	0000000a chThdExit
08000590 g     F .text	00000058 chSysTimerHandlerI
08000b20 g     F .text	00000020 chEvtBroadcastFlagsI
08000770 g     F .text	00000044 chSchGoSleepTimeoutS
08000360  w    F .text	00000002 Vector1A0
08000360  w    F .text	00000002 Vector5C
08000360  w    F .text	00000002 NMIVector
08000360  w    F .text	00000002 Vector11C
08000360  w    F .text	00000002 Vector19C
08001250 g     F .text	00000014 Vector8C
08000ac0 g     F .text	0000002a chEvtUnregister
08000360  w    F .text	00000002 VectorDC
08000360  w    F .text	00000002 Vector168
08000000 g     O startup	000001ac _vectors
08000740 g     F .text	00000028 chSchGoSleepS
08000360  w    F .text	00000002 Vector110
20000f68 g       .bss	00000000 __heap_base__
08000360  w    F .text	00000002 Vector120
08000360  w    F .text	00000002 VectorC8
080007c0 g     F .text	00000058 chSchWakeupS
080006f0 g     F .text	00000014 _scheduler_init
08000910 g     F .text	00000088 chThdCreateStatic
08001290 g     F .text	00000014 Vector94
08000360  w    F .text	00000002 VectorA8
08000360  w    F .text	00000002 VectorB4
08000710 g     F .text	0000002c chSchReadyI
080001ac g       startup	00000000 __fini_array_end
20000800 g       .stacks	00000000 __main_thread_stack_end__
080005f0 g     F .text	00000018 _vt_init
08001480 g     F .text	00000076 can_lld_transmit
08000c10 g     F .text	0000001c _heap_init
08000360  w    F .text	00000002 Vector74
20000984 g     O .bss	00000038 CAND1
08000c30 g     F .text	00000020 halInit
08000c50 g     F .text	00000004 canInit
08000360  w    F .text	00000002 Vector160
08000360  w    F .text	00000002 VectorEC
20000800 g       .bss	00000000 _bss_start
08000820 g     F .text	00000040 chSchDoRescheduleBehind
08000360  w    F .text	00000002 UsageFaultVector
2001c000 g       *ABS*	00000000 __heap_end__
08000360  w    F .text	00000002 DebugMonitorVector
08001540 g     F .text	000000c6 can_lld_receive
08000360  w    F .text	00000002 Vector40
08000360  w    F .text	00000002 VectorF8
08000360  w    F .text	00000002 Vector108
08000260 g     F .text	00000100 ResetHandler
08000360  w    F .text	00000002 VectorBC
08000360  w    F .text	00000002 Vector190
08000360  w    F .text	00000002 Vector150
08000360  w    F .text	00000002 Vector124
080003a0 g     F .text	00000030 _port_init
08000e30 g     F .text	00000098 hal_lld_init
080009c0 g     F .text	00000040 chThdExitS
08001330 g     F .text	00000014 Vector148
08001500 g     F .text	00000036 can_lld_is_rx_nonempty
08000360  w    F .text	00000002 Vector188
08000360  w    F .text	00000002 PendSVVector
08000360  w    F .text	00000002 Vector198
08000360  w    F .text	00000002 Vector118
08000610 g     F .text	00000038 chVTSetI
08000360  w    F .text	00000002 Vector64
20000f68 g       .bss	00000000 _bss_end
08000250  w    F .text	00000002 _default_exit
08000360  w    F .text	00000002 VectorCC
08000a10 g     F .text	00000008 chSemInit
08000360  w    F .text	00000002 Vector54
080012b0 g     F .text	00000014 Vector98
08000360  w    F .text	00000002 VectorD8
08000360  w    F .text	00000002 Vector138
08000360  w    F .text	00000002 Vector24
080008a0 g     F .text	00000014 chSchDoReschedule
08000530 g     F .text	0000005c chSysInit
08000360  w    F .text	00000002 Vector178
080009a0 g     F .text	00000018 chThdSleep
08000360  w    F .text	00000002 Vector84
08000450 g     F .text	0000001a SysTickVector
08000ed0 g     F .text	000000c8 stm32_clock_init
08000360  w    F .text	00000002 Vector1A4
08001610 g     F .text	000001cc _pal_lld_init
08000360  w    F .text	00000002 BusFaultVector
08000360  w    F .text	00000002 VectorD0
08000ba0 g     F .text	00000028 _core_init
080012f0 g     F .text	00000014 Vector140
08000360  w    F .text	00000002 VectorE4
08000360  w    F .text	00000002 VectorC0
08000360  w    F .text	00000002 Vector158
08000360  w    F .text	00000002 Vector130
08000470 g     F .text	00000010 _port_switch
200009bc g     O .bss	00000038 CAND2
08000380 g     F .text	00000012 SVCallVector
08000240  w    F .text	00000002 __late_init
20000928 g     O .bss	00000010 vtlist
08000360  w    F .text	00000002 HardFaultVector
080003d0 g     F .text	00000074 _port_irq_epilogue
08000360  w    F .text	00000002 Vector134
08000bd0 g     F .text	00000038 chCoreAlloc
08001390 g     F .text	000000a8 can_lld_start
08000360  w    F .text	00000002 VectorF0
08000ce0 g     F .text	00000052 canTransmit
08000360  w    F .text	00000002 Vector12C
080012d0 g     F .text	00000014 Vector13C
08000360  w    F .text	00000002 Vector100
08001a78 g       .stacks	00000000 _textdata
08000360  w    F .text	00000002 VectorE0
08000360  w    F .text	00000002 VectorF4
08000360  w    F .text	00000002 MemManageVector
08000c60 g     F .text	0000003e canObjectInit
080001ac g       startup	00000000 __fini_array_start
080001b0 g     F .text	00000084 main
08000360  w    F .text	00000002 Vector6C
20000938 g     O .bss	0000001c rlist
08000360  w    F .text	00000002 VectorA0
080001ac g       startup	00000000 __init_array_end
08000360  w    F .text	00000002 VectorC4
08000360  w    F .text	00000002 Vector7C
08000360  w    F .text	00000002 Vector180
08000a80 g     F .text	0000000a chMtxInit
08000510 g     F .text	00000014 _idle_thread
08000360  w    F .text	00000002 VectorB0
08001910 g     O .text	00000016 ch_debug
08001270 g     F .text	00000014 Vector90
08000af0 g     F .text	0000002e chEvtSignalI
08000360  w    F .text	00000002 Vector114
08000480 g     F .text	00000010 _port_thread_start
08000360  w    F .text	00000002 Vector164
08000360  w    F .text	00000002 Vector60
08000360  w    F .text	00000002 Vector1C
08000860 g     F .text	0000003c chSchDoRescheduleAhead
08000360  w    F .text	00000002 Vector17C
08000360  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08000360  w    F .text	00000002 Vector1A8
08000360  w    F .text	00000002 Vector16C
08001350 g     F .text	00000038 can_lld_init
08000360  w    F .text	00000002 Vector70
08000360  w    F .text	00000002 VectorD4
080004e0 g     F .text	0000002a nvicSetSystemHandlerPriority
20000848 g     O .bss	000000e0 _idle_thread_wa
20000800 g       .data	00000000 _data
08000360  w    F .text	00000002 Vector4C
08001310 g     F .text	00000014 Vector144
08000360  w    F .text	00000002 Vector80
08000370 g     F .text	00000006 _port_switch_from_isr
08000df0 g     F .text	00000040 tmInit
08000360  w    F .text	00000002 Vector15C
08000360  w    F .text	00000002 Vector68
08000b40 g     F .text	00000054 chEvtWaitAnyTimeout
20000400 g       .stacks	00000000 __main_stack_end__
08000360  w    F .text	00000002 Vector78
20000800 g       .data	00000000 _edata
08000ca0 g     F .text	00000040 canStart
08000650 g     F .text	00000024 chVTResetI
08000360 g     F .text	00000002 _unhandled_exception
08000360  w    F .text	00000002 Vector170
08000360  w    F .text	00000002 Vector88
08000a90 g     F .text	00000028 chEvtRegisterMask
20000400 g       .stacks	00000000 __main_thread_stack_base__
08000d40 g     F .text	00000052 canReceive
08000360  w    F .text	00000002 Vector104
08001440 g     F .text	0000003e can_lld_is_tx_empty
08000360  w    F .text	00000002 Vector184
08000360  w    F .text	00000002 Vector10C
080001ac g       startup	00000000 __init_array_start
08000360  w    F .text	00000002 Vector14C
080008c0 g     F .text	00000050 _thread_init
08000360  w    F .text	00000002 Vector50
08000360  w    F .text	00000002 Vector194
08000360  w    F .text	00000002 Vector154
20000000 g       .stacks	00000000 __main_stack_base__
08000360  w    F .text	00000002 Vector44
08000360  w    F .text	00000002 Vector28
080017f0 g     F .text	00000002 boardInit
08000360  w    F .text	00000002 VectorB8
08000360  w    F .text	00000002 VectorFC
20000800 g       .stacks	00000000 __process_stack_end__
08000360  w    F .text	00000002 Vector34
080017e0 g     F .text	00000004 __early_init
08000a60 g     F .text	0000001e chSemSignalI
08000360  w    F .text	00000002 Vector128
08000360  w    F .text	00000002 VectorA4
08000360  w    F .text	00000002 Vector20
08000360  w    F .text	00000002 Vector18C
08000a20 g     F .text	00000040 chSemWaitTimeoutS
08000360  w    F .text	00000002 Vector174


