
build/ch.elf:     file format elf32-littlearm
build/ch.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x080001d1

Program Header:
    LOAD off    0x00010000 vaddr 0x08000000 paddr 0x08000000 align 2**16
         filesz 0x000020d8 memsz 0x000020d8 flags rwx
    LOAD off    0x00020000 vaddr 0x20000000 paddr 0x20000000 align 2**16
         filesz 0x00000000 memsz 0x00000f78 flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 startup       000001ac  08000000  08000000  00010000  2**4
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001f28  080001b0  080001b0  000101b0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .textalign    00000000  080020d8  080020d8  000120d8  2**0
                  CONTENTS
  3 .stacks       00000800  20000000  20000000  00020000  2**0
                  ALLOC
  4 .data         00000000  20000800  20000800  000120d8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  5 .bss          00000778  20000800  20000800  00020000  2**3
                  ALLOC
  6 .debug_info   0000bc81  00000000  00000000  000120d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002a35  00000000  00000000  0001dd59  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_loc    000025dd  00000000  00000000  0002078e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_aranges 00000700  00000000  00000000  00022d6b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000580  00000000  00000000  0002346b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   000033cb  00000000  00000000  000239eb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00001acb  00000000  00000000  00026db6  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .comment      00000033  00000000  00000000  00028881  2**0
                  CONTENTS, READONLY
 14 .ARM.attributes 00000031  00000000  00000000  000288b4  2**0
                  CONTENTS, READONLY
 15 .debug_frame  000011f0  00000000  00000000  000288e8  2**2
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08000000 l    d  startup	00000000 startup
080001b0 l    d  .text	00000000 .text
080020d8 l    d  .textalign	00000000 .textalign
20000000 l    d  .stacks	00000000 .stacks
20000800 l    d  .data	00000000 .data
20000800 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    df *ABS*	00000000 vectors.c
00000000 l    df *ABS*	00000000 crt0.c
00000000 l    df *ABS*	00000000 chcore.c
00000000 l    df *ABS*	00000000 chcore_v7m.c
080002bc l       .text	00000000 _port_exit_from_isr
00000000 l    df *ABS*	00000000 nvic.c
00000000 l    df *ABS*	00000000 chsys.c
20000800 l     O .bss	0000004c mainthread.4793
00000000 l    df *ABS*	00000000 chdebug.c
00000000 l    df *ABS*	00000000 chvt.c
00000000 l    df *ABS*	00000000 chschd.c
08000840 l     F .text	00000060 wakeup
00000000 l    df *ABS*	00000000 chthreads.c
00000000 l    df *ABS*	00000000 chsem.c
00000000 l    df *ABS*	00000000 chmtx.c
00000000 l    df *ABS*	00000000 chevents.c
00000000 l    df *ABS*	00000000 chmemcore.c
20000968 l     O .bss	00000004 endmem
2000096c l     O .bss	00000004 nextmem
00000000 l    df *ABS*	00000000 chheap.c
20000970 l     O .bss	00000020 default_heap
00000000 l    df *ABS*	00000000 hal.c
00000000 l    df *ABS*	00000000 can.c
00000000 l    df *ABS*	00000000 tm.c
08001080 l     F .text	0000000c tm_start
08001090 l     F .text	0000002c tm_stop
20000990 l     O .bss	00000004 measurement_offset
00000000 l    df *ABS*	00000000 hal_lld.c
08001110 l     F .text	00000038 hal_lld_backup_domain_init
00000000 l    df *ABS*	00000000 can_lld.c
080012a0 l     F .text	00000120 can_lld_set_filters
080013c0 l     F .text	00000040 can_lld_tx_handler
08001400 l     F .text	00000070 can_lld_rx0_handler
08001470 l     F .text	00000070 can_lld_rx1_handler
080014e0 l     F .text	00000080 can_lld_sce_handler
00000000 l    df *ABS*	00000000 pal_lld.c
08001940 l     F .text	0000001e initgpio
00000000 l    df *ABS*	00000000 board.c
00000000 l    df *ABS*	00000000 main.c
08001ac0 l     F .text	00000094 can_tx
08001b60 l     F .text	00000074 can_rx
20000a08 l     O .bss	000001d0 can_rx2_wa
08002090 l     O .text	00000008 cancfg
20000bd8 l     O .bss	000001d0 can_tx_wa
080020a0 l     O .text	00000008 can1
080020d0 l     O .text	00000008 can2
20000da8 l     O .bss	000001d0 can_rx1_wa
00000000 l    df *ABS*	00000000 chregistry.c
00000000 l    df *ABS*	00000000 
080020d8 l       .stacks	00000000 _etext
0001c000 l       *ABS*	00000000 __ram_size__
00000000 l       startup	00000000 _text
20000000 l       startup	00000000 __ram_start__
2001c000 l       *ABS*	00000000 __ram_end__
20000f78 l       .bss	00000000 _end
00000400 l       *ABS*	00000000 __main_stack_size__
00000400 l       *ABS*	00000000 __process_stack_size__
08001f90 g     O .text	000000fc pal_default_config
08000290  w    F .text	00000002 Vector58
08000290  w    F .text	00000002 VectorE8
08000290  w    F .text	00000002 Vector9C
080003f0 g     F .text	00000040 nvicEnableVector
08000600 g     F .text	0000002c dbg_check_lock_from_isr
08000290  w    F .text	00000002 VectorAC
08000bc0 g     F .text	00000016 chThdExit
080004f0 g     F .text	00000070 chSysTimerHandlerI
08000d70 g     F .text	00000024 chEvtBroadcastFlagsI
080008f0 g     F .text	0000004c chSchGoSleepTimeoutS
08000290  w    F .text	00000002 Vector1A0
080005a0 g     F .text	00000028 dbg_check_lock
08000290  w    F .text	00000002 Vector5C
08000290  w    F .text	00000002 NMIVector
08000290  w    F .text	00000002 Vector11C
08000290  w    F .text	00000002 Vector19C
08001560 g     F .text	0000001c Vector8C
08000cf0 g     F .text	00000032 chEvtUnregister
08000290  w    F .text	00000002 VectorDC
08000290  w    F .text	00000002 Vector168
08000000 g     O startup	000001ac _vectors
080008a0 g     F .text	0000004c chSchGoSleepS
08000290  w    F .text	00000002 Vector110
20000f78 g       .bss	00000000 __heap_base__
08000290  w    F .text	00000002 Vector120
08000ac0 g     F .text	00000034 chThdCreateI
08000570 g     F .text	00000024 dbg_check_enable
08000290  w    F .text	00000002 VectorC8
08000940 g     F .text	00000054 chSchWakeupS
080007e0 g     F .text	00000014 _scheduler_init
08000b00 g     F .text	0000003e chThdCreateStatic
080015a0 g     F .text	0000001c Vector94
08000290  w    F .text	00000002 VectorA8
08000290  w    F .text	00000002 VectorB4
08000800 g     F .text	00000040 chSchReadyI
080001ac g       startup	00000000 __fini_array_end
080002a0  w    F .text	00000004 port_halt
20000800 g       .stacks	00000000 __main_thread_stack_end__
08000740 g     F .text	00000018 _vt_init
080017a0 g     F .text	00000072 can_lld_transmit
08000e40 g     F .text	00000030 chCoreAllocI
08000ea0 g     F .text	00000020 _heap_init
08000290  w    F .text	00000002 Vector74
20000994 g     O .bss	00000038 CAND1
08000ec0 g     F .text	00000020 halInit
08000ee0 g     F .text	00000008 canInit
08000290  w    F .text	00000002 Vector160
08000290  w    F .text	00000002 VectorEC
20000800 g       .bss	00000000 _bss_start
080009a0 g     F .text	00000048 chSchDoRescheduleBehind
08000290  w    F .text	00000002 UsageFaultVector
2001c000 g       *ABS*	00000000 __heap_end__
08000290  w    F .text	00000002 DebugMonitorVector
08001870 g     F .text	000000d0 can_lld_receive
080005d0 g     F .text	0000002c dbg_check_unlock
08000290  w    F .text	00000002 Vector40
08000290  w    F .text	00000002 VectorF8
08000290  w    F .text	00000002 Vector108
080001d0 g     F .text	000000c0 ResetHandler
08000290  w    F .text	00000002 VectorBC
08000290  w    F .text	00000002 Vector190
08000290  w    F .text	00000002 Vector150
08000290  w    F .text	00000002 Vector124
080002e0 g     F .text	00000030 _port_init
08001150 g     F .text	00000068 hal_lld_init
08000b70 g     F .text	00000048 chThdExitS
08001640 g     F .text	0000001c Vector148
08001820 g     F .text	0000004a can_lld_is_rx_nonempty
08000290  w    F .text	00000002 Vector188
08000290  w    F .text	00000002 PendSVVector
08000290  w    F .text	00000002 Vector198
08000290  w    F .text	00000002 Vector118
08000760 g     F .text	00000040 chVTSetI
08000290  w    F .text	00000002 Vector64
20000f78 g       .bss	00000000 _bss_end
20000938 g     O .bss	00000004 dbg_panic_msg
080001c0  w    F .text	00000002 _default_exit
08001a00 g     F .text	00000098 _pal_lld_setgroupmode
08000290  w    F .text	00000002 VectorCC
08000be0 g     F .text	00000008 chSemInit
08000290  w    F .text	00000002 Vector54
080015c0 g     F .text	0000001c Vector98
08000290  w    F .text	00000002 VectorD8
08000290  w    F .text	00000002 Vector138
08000290  w    F .text	00000002 Vector24
080006e0 g     F .text	00000028 chDbgCheckClassI
08000a50 g     F .text	0000001c chSchDoReschedule
08000480 g     F .text	0000006c chSysInit
08000290  w    F .text	00000002 Vector178
08000b40 g     F .text	00000022 chThdSleep
08000290  w    F .text	00000002 Vector84
08000390 g     F .text	00000028 SysTickVector
20000930 g     O .bss	00000004 dbg_isr_cnt
080011c0 g     F .text	000000dc stm32_clock_init
08000290  w    F .text	00000002 Vector1A4
08001960 g     F .text	00000098 _pal_lld_init
08000290  w    F .text	00000002 BusFaultVector
08000290  w    F .text	00000002 VectorD0
08000e10 g     F .text	00000028 _core_init
08001600 g     F .text	0000001c Vector140
08000290  w    F .text	00000002 VectorE4
08000290  w    F .text	00000002 VectorC0
08000290  w    F .text	00000002 Vector158
08000290  w    F .text	00000002 Vector130
080003c0 g     F .text	00000010 _port_switch
200009cc g     O .bss	00000038 CAND2
080002c0 g     F .text	00000012 SVCallVector
080001b0  w    F .text	00000002 __late_init
08000560 g     F .text	00000010 chDbgPanic
2000093c g     O .bss	00000010 vtlist
08000290  w    F .text	00000002 HardFaultVector
08000310 g     F .text	0000007c _port_irq_epilogue
08000290  w    F .text	00000002 Vector134
08000e70 g     F .text	00000024 chCoreAlloc
080016a0 g     F .text	000000bc can_lld_start
08000710 g     F .text	00000024 chDbgCheckClassS
08000290  w    F .text	00000002 VectorF0
08000f80 g     F .text	00000078 canTransmit
08000290  w    F .text	00000002 Vector12C
080015e0 g     F .text	0000001c Vector13C
08000290  w    F .text	00000002 Vector100
080006a0 g     F .text	00000038 dbg_check_leave_isr
080020d8 g       .stacks	00000000 _textdata
08000290  w    F .text	00000002 VectorE0
08000290  w    F .text	00000002 VectorF4
08000290  w    F .text	00000002 MemManageVector
08000ef0 g     F .text	0000003e canObjectInit
080001ac g       startup	00000000 __fini_array_start
08001be0 g     F .text	00000100 main
08000290  w    F .text	00000002 Vector6C
2000094c g     O .bss	0000001c rlist
08000290  w    F .text	00000002 VectorA0
08000660 g     F .text	00000038 dbg_check_enter_isr
080001ac g       startup	00000000 __init_array_end
08000290  w    F .text	00000002 VectorC4
08000290  w    F .text	00000002 Vector7C
08000290  w    F .text	00000002 Vector180
08000ca0 g     F .text	0000000a chMtxInit
08000460 g     F .text	00000014 _idle_thread
08000290  w    F .text	00000002 VectorB0
08001df0 g     O .text	00000016 ch_debug
08001580 g     F .text	0000001c Vector90
08000d30 g     F .text	00000038 chEvtSignalI
20000934 g     O .bss	00000004 dbg_lock_cnt
08000290  w    F .text	00000002 Vector114
080003d0 g     F .text	00000016 _port_thread_start
08000290  w    F .text	00000002 Vector164
08000290  w    F .text	00000002 Vector60
08000290  w    F .text	00000002 Vector1C
080009f0 g     F .text	00000054 chSchDoRescheduleAhead
08000290  w    F .text	00000002 Vector17C
08000290  w    F .text	00000002 Vector48
20000400 g       .stacks	00000000 __process_stack_base__
08000290  w    F .text	00000002 Vector1A8
08000290  w    F .text	00000002 Vector16C
08001660 g     F .text	00000038 can_lld_init
08000290  w    F .text	00000002 Vector70
08000290  w    F .text	00000002 VectorD4
08000430 g     F .text	0000002c nvicSetSystemHandlerPriority
20000850 g     O .bss	000000e0 _idle_thread_wa
20000800 g       .data	00000000 _data
08000290  w    F .text	00000002 Vector4C
08001620 g     F .text	0000001c Vector144
08000290  w    F .text	00000002 Vector80
080002b0 g     F .text	0000000e _port_switch_from_isr
080010e0 g     F .text	00000028 tmInit
08000290  w    F .text	00000002 Vector15C
08000290  w    F .text	00000002 Vector68
08000da0 g     F .text	00000068 chEvtWaitAnyTimeout
20000400 g       .stacks	00000000 __main_stack_end__
08000290  w    F .text	00000002 Vector78
20000800 g       .data	00000000 _edata
08000f30 g     F .text	00000050 canStart
080007a0 g     F .text	0000003c chVTResetI
08000290 g     F .text	00000002 _unhandled_exception
08000290  w    F .text	00000002 Vector170
08000290  w    F .text	00000002 Vector88
08000cb0 g     F .text	00000034 chEvtRegisterMask
080010c0 g     F .text	00000020 tmObjectInit
20000400 g       .stacks	00000000 __main_thread_stack_base__
08001000 g     F .text	00000078 canReceive
08000290  w    F .text	00000002 Vector104
08001760 g     F .text	0000003e can_lld_is_tx_empty
08000290  w    F .text	00000002 Vector184
08000290  w    F .text	00000002 Vector10C
080001ac g       startup	00000000 __init_array_start
08000290  w    F .text	00000002 Vector14C
08000a70 g     F .text	00000050 _thread_init
08000290  w    F .text	00000002 Vector50
08000290  w    F .text	00000002 Vector194
08000290  w    F .text	00000002 Vector154
20000000 g       .stacks	00000000 __main_stack_base__
08000290  w    F .text	00000002 Vector44
08000290  w    F .text	00000002 Vector28
08001ab0 g     F .text	00000002 boardInit
08000290  w    F .text	00000002 VectorB8
08000290  w    F .text	00000002 VectorFC
08000630 g     F .text	0000002c dbg_check_unlock_from_isr
20000800 g       .stacks	00000000 __process_stack_end__
08000290  w    F .text	00000002 Vector34
08001aa0 g     F .text	00000008 __early_init
08000c50 g     F .text	00000044 chSemSignalI
08000290  w    F .text	00000002 Vector128
08000290  w    F .text	00000002 VectorA4
08000290  w    F .text	00000002 Vector20
08000290  w    F .text	00000002 Vector18C
08000bf0 g     F .text	00000060 chSemWaitTimeoutS
08000290  w    F .text	00000002 Vector174


